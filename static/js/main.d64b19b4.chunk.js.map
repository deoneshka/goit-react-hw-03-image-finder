{"version":3,"sources":["Components/Searchbar/SearchBar.js","Services/API.js","Components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Modal/Modal.js","Components/Button/Button.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","axios","defaults","baseURL","fetchImages","a","searchQuery","currentPage","get","r","data","hits","ImageGalleryItem","image","onClick","src","alt","ImageGallery","images","map","id","webformatURL","largeImageURL","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","modalImage","createPortal","Button","App","error","showModal","isLoading","toggleModal","handleClick","console","log","onChangeQuery","options","API","then","prevState","catch","finally","scrollImages","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d64b19b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n    static propTypes = {\r\n        onSubmit: PropTypes.func.isRequired,\r\n    };\r\n\r\n    state = {\r\n        query: '',\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ query: e.currentTarget.value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.query);\r\n        this.setState({ query: '' });\r\n    };\r\n    \r\n    render() {\r\n        const { query } = this.state;\r\n\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={query}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Searchbar;","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst KEY = '20697627-1a708263c5a563a5588011ca6';\r\n\r\nconst fetchImages = async ({ searchQuery = '', currentPage = 1 }) => {\r\n  const r = await axios\r\n    .get(\r\n      `?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n    );\r\n  return r.data.hits;\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { fetchImages };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ image, onClick }) => {\r\n    return (\r\n        <li className=\"ImageGalleryItem\" onClick={onClick}>\r\n            <img src={image} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n        </li>\r\n    )\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, onClick }) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {images.map(({ id, webformatURL, largeImageURL }) => (\r\n                <ImageGalleryItem key={id} image={webformatURL} onClick={() => onClick(largeImageURL)}/>\r\n            ))}\r\n        </ul>\r\n    )\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n    static propTypes = {\r\n        onClose: PropTypes.func.isRequired,\r\n        modalImage: PropTypes.string,\r\n    };\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { modalImage } = this.props;\r\n\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n                <div className=\"Modal\">\r\n                    <img src={modalImage} alt=\"\" />\r\n                </div>\r\n            </div>,\r\n            modalRoot,\r\n        )\r\n    }\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n    return (\r\n        <button type=\"button\" className='Button' onClick={onClick}>Load more</button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n  onButtonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport Searchbar from './Components/Searchbar';\r\nimport API from './Services/API';\r\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\r\nimport Modal from './Components/Modal';\r\nimport Button from './Components/Button';\r\nimport Loader from \"react-loader-spinner\";\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        images: [],\r\n        searchQuery: '',\r\n        currentPage: 1,\r\n        error: null,\r\n        modalImage: '',\r\n        showModal: false,\r\n        isLoading: false,\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.searchQuery !== this.state.searchQuery) {\r\n            this.fetchImages();\r\n        };\r\n    };\r\n\r\n    toggleModal = largeImageURL => {\r\n        this.setState(({ showModal, modalImage }) => ({\r\n            modalImage: !showModal ? largeImageURL : '',\r\n            showModal: !showModal,\r\n        }));\r\n    };\r\n\r\n    handleClick = e => {\r\n        console.log(e.currentTarget);\r\n    }\r\n    \r\n    onChangeQuery = query => {\r\n        this.setState({\r\n            images: [],\r\n            searchQuery: query,\r\n            currentPage: 1,\r\n            error: null,\r\n        })\r\n    };\r\n\r\n    fetchImages = () => {\r\n        const { currentPage, searchQuery } = this.state;\r\n        const options = { searchQuery, currentPage };\r\n        \r\n        this.setState({ isLoading: true });\r\n        \r\n        API.fetchImages(options)\r\n            .then(images => {\r\n                this.setState(prevState => ({\r\n                    images: [...prevState.images, ...images],\r\n                    currentPage: prevState.currentPage + 1,\r\n                }));\r\n            })\r\n            .catch(error => this.setState({ error }))\r\n            .finally(() => this.setState({ isLoading: false }));\r\n        \r\n        this.scrollImages();\r\n    };\r\n\r\n    scrollImages = () => {\r\n        setTimeout(() => {\r\n            window.scrollTo({\r\n                top: document.documentElement.scrollHeight,\r\n                behavior: 'smooth',\r\n            });\r\n        }, 500);\r\n    };\r\n\r\n    render() {\r\n        const { images, modalImage, showModal, isLoading} = this.state;\r\n\r\n        return (\r\n            <div className='App'>\r\n                <Searchbar onSubmit={this.onChangeQuery} />\r\n                <ImageGallery images={images} onClick={this.toggleModal} />\r\n                {\r\n                    isLoading && <Loader className='loader' color=\"#303f9f\" type=\"Circles\" height={80} width={80}/>\r\n                }\r\n                {\r\n                    images.length !== 0 && <Button onClick={this.fetchImages} />\r\n                }\r\n                {\r\n                    showModal && <Modal modalImage={modalImage} onClose={this.toggleModal} />\r\n                }\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}